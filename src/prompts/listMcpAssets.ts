/**
 * List all MCP assets available in the Exa Websets server
 */

export async function listMcpAssets(): Promise<string> {
  return `# üöÄ Exa Websets MCP Server Assets

## üìù Prompts
Interactive conversation starters and analysis guides:

‚Ä¢ **list_mcp_assets** () - This comprehensive list of all MCP server capabilities
‚Ä¢ **webset_discovery** () - Discover and explore available websets
‚Ä¢ **webset_status_check** (websetId) - Check status of async webset operations
‚Ä¢ **webset_analysis_guide** (websetId) - Guide for analyzing completed websets
‚Ä¢ **webhook_setup_guide** () - Configure webhooks for webset notifications
‚Ä¢ **quick_start** () - Get started quickly with creating your first webset
‚Ä¢ **enrichment_workflow** (websetId) - Workflow for enriching webset data
‚Ä¢ **horizontal_process** (searchCriteria, projectName?) - Create multiple websets and build meta-dataset from cross-matches (comma-separated queries)
‚Ä¢ **webset_portal** (websetId, researchQuery, maxPortals?) - Deep-dive research through webset URLs using parallel subagents
‚Ä¢ **iterative_intelligence** (researchTopic, iterations?, registryPath?) - Self-improving research with webset registry for fast retrieval

## üîß Tools
Webset management and analysis functions:

  ### Core Webset Operations
  ‚Ä¢ **websets_search** (query, limit) - Search the web and create new websets asynchronously
  ‚Ä¢ **websets_search_guide** () - Learn to use websets search effectively
  ‚Ä¢ **websets_manager** (action, params) - Advanced webset management operations
  ‚Ä¢ **knowledge_graph** (operation, params) - Maintain connections between webset results

### Webset Management
‚Ä¢ **list_websets** () - List all your websets with status and metadata
‚Ä¢ **get_webset** (websetId) - Get detailed info about a specific webset
‚Ä¢ **get_webset_items** (websetId, limit, offset) - Retrieve items from a completed webset
‚Ä¢ **delete_webset** (websetId) - Delete a webset and all its data
‚Ä¢ **update_webset_metadata** (websetId, metadata) - Update webset metadata

### Item Operations
‚Ä¢ **add_items** (websetId, items) - Add new items to an existing webset
‚Ä¢ **update_item** (websetId, itemId, data) - Update a specific item
‚Ä¢ **delete_item** (websetId, itemId) - Delete a specific item
‚Ä¢ **search_items** (websetId, query, filters) - Search within webset items

### Enrichment & Analysis
‚Ä¢ **enrich_webset** (websetId, enrichmentType, config) - Enrich webset with additional data
‚Ä¢ **export_webset** (websetId, format) - Export webset data (CSV, JSON, etc.)
‚Ä¢ **analyze_webset** (websetId, analysisType) - Run analytics on webset data

### Webhook Management
‚Ä¢ **register_webhook** (url, events, config) - Register webhook for notifications
‚Ä¢ **list_webhooks** () - List all registered webhooks
‚Ä¢ **update_webhook** (webhookId, config) - Update webhook configuration
‚Ä¢ **delete_webhook** (webhookId) - Remove a webhook
‚Ä¢ **test_webhook** (webhookId) - Test webhook connectivity

### Event Monitoring
‚Ä¢ **get_events** (websetId, limit) - Get recent events for a webset
‚Ä¢ **get_event_details** (eventId) - Get detailed info about an event

## üìä Key Concepts

### Asynchronous Nature
Websets are **highly asynchronous** - searches can take 20+ minutes to complete:
‚Ä¢ Initial search triggers webset creation with status "processing"
‚Ä¢ Use webhooks or polling to monitor progress
‚Ä¢ Items become available as they're discovered
‚Ä¢ Final status will be "completed" or "failed"

### Webset Lifecycle
1. **Creation**: Initiated via search or manual creation
2. **Processing**: Exa crawls and processes web data
3. **Enrichment**: Optional post-processing for additional data
4. **Completion**: All items collected and ready for use
5. **Export/Analysis**: Data ready for downstream use

### Best Practices
‚Ä¢ Always check webset status before accessing items
‚Ä¢ Use webhooks for efficient notification of completion
‚Ä¢ Implement exponential backoff when polling status
‚Ä¢ Handle partial results - items may be available before completion
‚Ä¢ Use enrichment for additional metadata (summaries, tags, etc.)

---

**üéØ Quick Start:**
1. Use \`websets_search()\` to create a new webset from a search query
2. Register a webhook with \`register_webhook()\` to get notified on completion
3. Monitor status with \`webset_status_check(websetId)\` prompt
4. Once complete, retrieve items with \`get_webset_items()\`
5. Export or analyze results as needed

**üí° Pro Tips:**
‚Ä¢ Websets can contain thousands of items - use pagination
‚Ä¢ Enrichment can add significant value but increases processing time
‚Ä¢ Webhooks are more efficient than polling for status updates
‚Ä¢ Items are returned in relevance order by default
‚Ä¢ Use the search_items tool for filtering within large websets`;
}